---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/8/23 23:49
---

local m = {}
local nodeMgr = require("nodeMgr")
local serverType = require("serverType")
local serviceNames = require("serviceNames")
function m.GetuniqueUserid(db)
    local uid = db:incr("__uniqueUserid")
    uid = 100000 + uid
    return uid
end

---@param data DataBase
function m.addDataToDB(data)
    local da = data:ToSaveData()
    return nodeMgr.call(serverType.DB,serviceNames.dbserver,"Add",da);
end

---@param data
function m.upOrAddDataToDB(data)
    local da = data:ToSaveData()
    return nodeMgr.call(serverType.DB,serviceNames.dbserver,"AddOrUpdate",da);
end

---@param data
function m.delDataToDB(data)
    local da = data:ToSaveData()
    return nodeMgr.call(serverType.DB,serviceNames.dbserver,"Del",da);
end

function m.callDataSer(cmd,...)
    return nodeMgr.call(serverType.DB,serviceNames.dbserver,cmd,...);
end

function m.callMysqlSer(cmd,...)
    return nodeMgr.call(serverType.DB,serviceNames.mySqlDB,cmd,...);
end

function m.call(modeName,funcName,...)
    return  nodeMgr.call(serverType.DB,
            serviceNames.dbserver,
            "dataChange",
            modeName,funcName,...)
end

function m.send(modeName,funcName,...)
    return nodeMgr.send(serverType.DB,
            serviceNames.dbserver,
            "dataChange",
            modeName,funcName,...)
end

---@param changeDataInfo  ChangeDataInfo
function m.keyToRedisKeys(changeDataInfo)
    local hashKeyT ={}
    table.insert(hashKeyT,changeDataInfo.keyValue)

    local listV
    local listKey
    if changeDataInfo.secondaryKeys and table.nums(changeDataInfo.secondaryKeys) > 0 then
        local listKeyT = {}
        table.insert(listKeyT,changeDataInfo.personalId)
        table.insert(listKeyT,changeDataInfo.keyValue)
        local tmplistV = {}
        for i, key in ipairs(changeDataInfo.secondaryKeys) do
            table.insert(tmplistV,changeDataInfo[key])
            table.insert(hashKeyT,changeDataInfo[key])
        end
        listV = table.concat(tmplistV,":")
        listKey = table.concat(listKeyT,":")
    end
    local hashKey = table.concat(hashKeyT,":")
    return hashKey,listKey,listV
end

return m