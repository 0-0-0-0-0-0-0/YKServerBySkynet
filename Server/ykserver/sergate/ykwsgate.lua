---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/8/14 18:05
---
local FIN_TEXT       = 0x01
local FIN_BINARY     = 0x02
local FIN_TEST       = 0x03
local socketdriver = require "skynet.socketdriver"
local skynet = require "skynet"
local netpack = require "websocketnetpack"
local gateserver = require "wsgateserver"
local gamesession = require("gamesession")
local serviceNames = require("serviceNames")
local distributeMsg = require("distributeClientMsg")
local protoUtil = require("protoUtil")
local logger       = require "logger"
local nodename     = skynet.getenv "nodename"
local CMD = {}
local wsServerHandler = {}

--local protoUtil = require("protoUtil")
local gate
local function sendFrame(fd, opcode, data)
    local finBit, maskBit = 0x80, 0x00
    local frame = string.pack("B", finBit | opcode)
    local len = #data
    if len < 126 then
        frame = frame .. string.pack("B", len | maskBit)
    elseif len < 0xFFFF then
        frame = frame .. string.pack(">BH", 126 | maskBit, len)
    else
        frame = frame .. string.pack(">BL", 127 | maskBit, len)
    end
    frame = frame .. data

    socketdriver.send(fd, frame)
end

local function sendBuffer(fd, buffer)
    sendFrame(fd, FIN_BINARY, buffer)
end
function wsServerHandler.open(source, conf)
    gate = skynet.self()
    gamesession.Init()
end

function wsServerHandler.close()

end

function wsServerHandler.message(fd, msg, sz)

    local bin       = netpack.tostring(msg,sz)
    local session   = gamesession.command.RefreshSession(fd)
    if not session then
        logger.Errorf("收到一个没有链接客户端的消息直接抛弃"..fd)
    end
    local header
    local ok, err = xpcall(function()
        header = protoUtil.decode(bin)
    end, debug.traceback)

    if ok then
        distributeMsg.DistributionGateMsg(session, header,bin)
    else
        skynet.error("解包失败 fd =",err)
        gateserver.closeclient(fd)
    end
end

function wsServerHandler.connect(fd,msg)
    print("客户端连接成功"..fd)
    print("ip"..msg)
    if gateserver.openclient(fd) then
        local msg =
        {
            ip = msg,
            gate = gate,
            gateNodeName = nodename
        }
        gamesession.command.Craeate(fd,msg)
    end
end

function wsServerHandler.disconnect(fd)
    print("客户端断开连接"..fd)
    CMD.kickfd(fd)
end

function wsServerHandler.error(fd,msg)
    print("客户端断开连接error"..fd)
    CMD.kickfd(fd)
end

function wsServerHandler.warning(fd, size)

end

function CMD.HeartbeatTimeOut(fd)
    print("心跳超时处理掉客户端"..fd)
    CMD.kickfd(fd)
end

function CMD.kickfd(fd)
    gateserver.closeclient(fd)
    gamesession.command.closeclient(fd)
end

---发送返回消息给客户端
function CMD.responseC2S(client, header, data)
    local buffer = protoUtil.encodeData(header, data)
    sendBuffer(client, buffer)
end

---主动推送消息给客户端
function CMD.pushS2C(client,header, data)
    local buffer = protoUtil.encodeData(header, data)
    sendBuffer(client, buffer)
end

---主动推送消息给客户端
function CMD.pushMultiS2C(roldids,header, data)
    for _, roleId in pairs(roldids) do
        local session = gamesession.command.FindByUserId(roleId)
        if session and session.isLoginSucc then
            CMD.pushS2C(session.client,header,data)
        end
    end
end

function CMD.callGameSession(cmd,...)
    local func = gamesession.command[cmd]
    if func then
        return func(...)
    end
    return false
end

function wsServerHandler.command(cmd, source, ...)
    local f = assert(CMD[cmd])
    return f(...)
end

function wsServerHandler.onStart()
    skynet.register(serviceNames.wsgate)
end

gateserver.start(wsServerHandler)