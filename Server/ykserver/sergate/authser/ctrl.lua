---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/8/27 21:12
---

local this = {}
local serviceName = require("serviceNames")
local datautils = require("datamgr.dataSerUtil")
local nodeMgr = require("nodeMgr")
local errorcode = require("errorCode")
local userDataClass = require("data.userData")
local protoMap = require("protoMap")
local logger = require("logger")
---@param user userData
---@param session Gamesession
function this.login(session,token,userid)
    local ec,data = errorcode.SystemError.unknow
    local checkTokenFlag = this.CheckToken(userid,token)

    if checkTokenFlag then
        local ok,flag = datautils.call(serviceName.dbModeName.auth,"setLastLoginTime",userid)

        local ok,otherSession = nodeMgr.callGameSession(session,"FindByUserId",userid)
        if otherSession ~= nil then
            if otherSession.roleId and otherSession.client == session.client then
                ec = errorcode.SystemError.logined
            else
                local head =
                {
                    cmd = protoMap.auth.tickOutPlayer.id,
                    msgid = 0,
                    errorcode = 0,
                }
                local tickOutEvent =
                {
                    tickType = 1
                }
                nodeMgr.pushMsgToClient(otherSession,head,tickOutEvent)
                nodeMgr.callGate(otherSession,"kickfd",otherSession.client)
            end

        end
        if ec ~= errorcode.SystemError.logined then
            local ok,flag = nodeMgr.callGameSession(session,"BindUserId",userid,session.client)
            if ok and flag then
                ec = errorcode.SystemError.success
                local _,userInfo = datautils.call(serviceName.dbModeName.auth,"getUserData",userid) ---@type userData
                userInfo = userDataClass():setData(userInfo)
                if userInfo then
                    data = {roleinfo=userInfo:ToRespUserData()}
                else
                    ec = errorcode.authError.roleIdNoExist
                end
            else
                logger.Warning("登陆失败-----------玩家id="..userid)
                ec = errorcode.SystemError.unknow
            end
        end
    end
    return ec,data
end

function this.CheckToken(roleid,token)
    local ok,flag = datautils.call(serviceName.dbModeName.auth,"checkToken",roleid,token)
    return ok and flag
end


return this