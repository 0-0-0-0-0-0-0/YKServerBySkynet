---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/8/23 18:39
---
local utils = require("utils")
local errorCode = require("errorCode")
local dataUtil = require("datamgr.dataSerUtil")
local serviceName = require("serviceNames")
local names = require("names")
local this = {}
function this.createaccount(query,body,header)
    local ec,retData = errorCode.SystemError.unknow,nil
    local id,pwd = query.account,query.pwd
    if id and pwd then
        local ok,data = dataUtil.call(serviceName.dbModeName.auth,"GetAccountInfo",id)
        if not ok then
            ec = errorCode.SystemError.unknow
        else
            if data then
                ec = errorCode.authError.accountExist
            else
                ok,data= dataUtil.call(serviceName.dbModeName.auth,"CreateAccount",id,pwd)
                if not ok then
                    ec = errorCode.SystemError.unknow
                else
                    local _data = data ---@type accountData
                    if _data then
                        ec = errorCode.SystemError.success
                        retData =
                        {
                            userid = _data.userid
                        }
                    else
                        ec = errorCode.SystemError.unknow
                    end
                end
            end
        end
    else
        ec = errorCode.authError.accountAndPwdIsNull
    end
    return ec,retData
end

function this.login(query)
    local ec,retData = errorCode.SystemError.unknow,nil
    local id,pwd = query.account,query.pwd
    if id or pwd then
        local ok,data = dataUtil.call(serviceName.dbModeName.auth,"GetAccountInfo",id)
        if ok  then
            if data and data.pwd == pwd then
                ec = 0
                local ok,key = dataUtil.call(serviceName.dbModeName.auth,"BuildToken",data.userid)
                retData =
                {
                    token = key,
                    userid = data.userid
                }
            else
                ec = errorCode.authError.loginAccountFill
            end
        end
    else
        ec = errorCode.authError.accountAndPwdIsNull
    end
    return ec,retData
end
return this