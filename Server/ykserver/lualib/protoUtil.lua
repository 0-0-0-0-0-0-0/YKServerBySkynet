---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/8/15 1:53
---
local errorcode = require("errorCode")
local pb = require "pb"
local protoc = require "protoc"
local protoMap = require "protoMap"

local this = {}
local _protoc
function this.init()
    _protoc = protoc.new()
    for i, v in ipairs(protoMap.protoFiles) do
        _protoc:loadfile(string.format("./ykserver/protos/%s.proto",v))
    end
end

function this.decode(bin)
    local xxx = pb.decode("packbase",bin)
    local content   =   xxx.contentBuff
    return xxx,content
end

function this.encodeData(header,data)
    local allData={} ---@type packbase
    allData.errorcode = header.errorcode
    allData.cmd = header.cmd
    allData.msgid = header.msgid
    local proto = protoMap.protos[header.cmd]
    if proto and data then
        if proto.response then
            allData.contentBuff = pb.encode(proto.response,data)
        end
    end
    return pb.encode("packbase",allData)
end
---@return packbase,table
function this.decodeRequest(buffer)
    local header,content = this.decode(buffer)
    if not header then
        header = {}
        header.errorcode = errorcode.SystemError.packHeaderNil
        return header
    end

    if not header.cmd then
        header.errorcode = errorcode.SystemError.protoNotExists
        return header
    end

    local proto = protoMap.protos[header.cmd]
    if not proto then
        header.errorcode = errorcode.SystemError.protoNotExists
        return proto
    end
    local result
    if proto.request and content and #content > 0 then
        result = pb.decode(proto.request,content)
    end
    return header,result
end
return this