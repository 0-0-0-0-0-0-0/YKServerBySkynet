---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/9/19 0019 19:08
---
local serviceNames = require("serviceNames")
local skynet = require("skynet")
local json = require("json")
local utils = require("utils")
local aeslua = require("aeslua")
local crypt = require("skynet.crypt")

local appid = "wx557f39afcfcb06d6"
local appKey = "a073f4ec55b909d7e8a10ae32753168a"
local code2SessionUrl = "https://api.weixin.qq.com/sns/jscode2session?appid=%s&secret=%s&js_code=%s&grant_type=authorization_code"
local checkSessionKeyUrl = "https://api.weixin.qq.com/wxa/checksession?access_token=%s&signature=%s&openid=%s&sig_method=hmac_sha256"
local getAccessTokenUrl = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=%s&secret=%s"

local global_access_token
local global_access_token_expires_in

local this= {}

function this.codeToSession(code)
    if not code then
        return nil
    end
    local url = string.format(code2SessionUrl,appid,appKey,code)
    local ec,t,m = skynet.call(serviceNames.HTTPCLI, "lua", "request", url)
    print(ec,t,utils.tableToString(m))
    if ec and m.response_code == 200 then
        local backT = json.decode(t)
        local openid = backT.openid
        local session_key = backT.session_key
        return openid,session_key
    end
    return nil
end
---@param wechatInfo WXData
function this.checkSession(wechatInfo)
    if not global_access_token then
        this.getAccessTokenFromWeb()
    end
    local signature = crypt.hmac_sha256(wechatInfo.sessionkey,"")
    signature =  string.lower(utils.bufferTostring(signature))
    local url = string.format(checkSessionKeyUrl,global_access_token,signature,wechatInfo.openid)
    local ec,t,m = skynet.call(serviceNames.HTTPCLI, "lua", "request", url)
    print("checkSession --------- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>",ec,t,utils.tableToString(m),signature)
    if ec and m.response_code == 200 then
        local backT = json.decode(t)
        if backT then
            print(backT.errmsg)
            return backT.errcode
        end
    end

    return 1
end

function this.getAccessTokenFromWeb()
    local url = string.format(getAccessTokenUrl,appid,appKey)
    local ec,t,m = skynet.call(serviceNames.HTTPCLI, "lua", "request", url)
    if ec and m.response_code == 200 then
        local backT = json.decode(t)
        print(t)
        global_access_token = backT.access_token
        global_access_token_expires_in = backT.expires_in
        skynet.fork(function()
                skynet.sleep(global_access_token_expires_in * 100)
                this.getAccessTokenFromWeb()
        end)
    end
end
---@param wechatInfo WXData
function this.checkWaterMarkAndUserInfo(postInfo,wechatInfo)
    local signature2 =utils.bufferTostring( crypt.sha1(postInfo.rawData .. wechatInfo.sessionkey))
    local encryptedData = aeslua.decrypt(postInfo.encryptedData,wechatInfo.sessionkey,postInfo.iv)
    signature2 = string.lower(signature2)
    local decryptData = json.decode(encryptedData)
    if signature2 == postInfo.signature and this.checkWaterMark(decryptData,encryptedData) then -- 签名验证
        local wechatInfo
        if decryptData then
            wechatInfo = decryptData
        else
            wechatInfo = json.decode(postInfo.rawData)
        end
        return wechatInfo
    end

    return nil
end

function this.checkWaterMark(decryptData,encryptedData)
    if decryptData then
        if decryptData.watermark then
            if decryptData.watermark and decryptData.watermark.appid then
                return decryptData.watermark.appid == appid
            end
        end
    elseif encryptedData then
        return string.find(encryptedData,"watermark") > 0 and string.find(encryptedData,"appid") > 0 and string.find(encryptedData,appid) > 0
    end
    return false
end

return this
